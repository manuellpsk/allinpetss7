[{"D:\\Documentos\\AllinPets\\cliente\\src\\App.js":"1","D:\\Documentos\\AllinPets\\cliente\\src\\componentes\\Principal\\Principal.js":"2","D:\\Documentos\\AllinPets\\cliente\\src\\componentes\\ModalPublicar\\ModalPublicar.js":"3","D:\\Documentos\\AllinPets\\cliente\\src\\hooks\\useGetPubli.js":"4","D:\\Documentos\\AllinPets\\cliente\\src\\services\\Funciones.js":"5","D:\\Documentos\\AllinPets\\cliente\\src\\serviceWorker.js":"6","D:\\Documentos\\AllinPets\\cliente\\src\\index.js":"7","D:\\Documentos\\AllinPets\\cliente\\src\\componentes\\Home\\Home.js":"8","D:\\Documentos\\AllinPets\\cliente\\src\\context\\UserContext.js":"9","D:\\Documentos\\AllinPets\\cliente\\src\\componentes\\Chat\\Chat.js":"10","D:\\Documentos\\AllinPets\\cliente\\src\\componentes\\Navigation\\Navigation.js":"11","D:\\Documentos\\AllinPets\\cliente\\src\\componentes\\Registro\\Registro.js":"12","D:\\Documentos\\AllinPets\\cliente\\src\\services\\Socket.js":"13","D:\\Documentos\\AllinPets\\cliente\\src\\hooks\\useUser.js":"14","D:\\Documentos\\AllinPets\\cliente\\src\\componentes\\Mensajes\\Mensajes.js":"15","D:\\Documentos\\AllinPets\\cliente\\src\\componentes\\Adopciones\\Adopciones.js":"16","D:\\Documentos\\AllinPets\\cliente\\src\\hooks\\useGetMyPubli.js":"17","D:\\Documentos\\AllinPets\\cliente\\src\\componentes\\Recursos\\FormatPub.js":"18","D:\\Documentos\\AllinPets\\cliente\\src\\hooks\\useDenuncias.js":"19","D:\\Documentos\\AllinPets\\cliente\\src\\hooks\\UseChat.js":"20","D:\\Documentos\\AllinPets\\cliente\\src\\componentes\\Recursos\\Publicidad.js":"21","D:\\Documentos\\AllinPets\\cliente\\src\\componentes\\Alerts\\Alerts.js":"22","D:\\Documentos\\AllinPets\\cliente\\src\\componentes\\ModalSignIn\\ModalSignIn.js":"23","D:\\Documentos\\AllinPets\\cliente\\src\\componentes\\Noticias\\Noticias.js":"24","D:\\Documentos\\AllinPets\\cliente\\src\\hooks\\useComentarios.js":"25","D:\\Documentos\\AllinPets\\cliente\\src\\componentes\\Configuracion\\Configuracion.js":"26","D:\\Documentos\\AllinPets\\cliente\\src\\componentes\\Recursos\\Toasts.js":"27"},{"size":918,"mtime":1607366915566,"results":"28","hashOfConfig":"29"},{"size":1154,"mtime":1603430140040,"results":"30","hashOfConfig":"29"},{"size":2062,"mtime":1603429902557,"results":"31","hashOfConfig":"29"},{"size":2255,"mtime":1605677221252,"results":"32","hashOfConfig":"29"},{"size":10005,"mtime":1607485933036,"results":"33","hashOfConfig":"29"},{"size":5086,"mtime":1606503315878,"results":"34","hashOfConfig":"29"},{"size":458,"mtime":1602911325637,"results":"35","hashOfConfig":"29"},{"size":2368,"mtime":1605735431058,"results":"36","hashOfConfig":"29"},{"size":761,"mtime":1606370612432,"results":"37","hashOfConfig":"29"},{"size":3723,"mtime":1607051022272,"results":"38","hashOfConfig":"29"},{"size":1505,"mtime":1603426360657,"results":"39","hashOfConfig":"29"},{"size":6658,"mtime":1607636501190,"results":"40","hashOfConfig":"29"},{"size":97,"mtime":1606505766296,"results":"41","hashOfConfig":"29"},{"size":2801,"mtime":1607625325730,"results":"42","hashOfConfig":"29"},{"size":1886,"mtime":1607022484424,"results":"43","hashOfConfig":"29"},{"size":224,"mtime":1603168173276,"results":"44","hashOfConfig":"29"},{"size":943,"mtime":1602705542492,"results":"45","hashOfConfig":"29"},{"size":2462,"mtime":1605766421204,"results":"46","hashOfConfig":"29"},{"size":1326,"mtime":1603924010642,"results":"47","hashOfConfig":"29"},{"size":1232,"mtime":1606974179485,"results":"48","hashOfConfig":"29"},{"size":727,"mtime":1603077459910,"results":"49","hashOfConfig":"29"},{"size":612,"mtime":1607573273012,"results":"50","hashOfConfig":"29"},{"size":6148,"mtime":1607638667158,"results":"51","hashOfConfig":"29"},{"size":1706,"mtime":1605720073728,"results":"52","hashOfConfig":"29"},{"size":819,"mtime":1603338299317,"results":"53","hashOfConfig":"29"},{"size":5245,"mtime":1607366978940,"results":"54","hashOfConfig":"29"},{"size":1550,"mtime":1607636901400,"results":"55","hashOfConfig":"29"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1lzzrhz",{"filePath":"58","messages":"59","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"67"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":20,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"71"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"71"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"71"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"89"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"96","messages":"97","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"71"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"71"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"107","messages":"108","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"109","messages":"110","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"63"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"71"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"117","messages":"118","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"119","messages":"120","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\Documentos\\AllinPets\\cliente\\src\\App.js",[],"D:\\Documentos\\AllinPets\\cliente\\src\\componentes\\Principal\\Principal.js",["128","129"],"import React, { useEffect } from 'react'\r\nimport Publicidad from './../Recursos/Publicidad';\r\nimport useUser from '../../hooks/useUser'\r\nimport { useHistory } from 'react-router-dom'\r\n\r\nexport default () => {\r\n    const { isLogged } = useUser()\r\n    let history = useHistory()\r\n    useEffect(() => {\r\n        if (!isLogged) history.push('/');\r\n        else history.push('/home')\r\n    }, [isLogged]);\r\n    return (\r\n        <>\r\n            <main role=\"main\" className=\"text-center\" >\r\n                <h1 className=\"cover-heading\">All in Pets</h1>\r\n                <p className=\"lead\">Ayuda a mejorar la calidad de vida de los animales callejeros</p>\r\n                <img src=\"/images/perroPortada.jpg\" className=\"img-fluid rounded\" alt=\"Perrito\"></img>\r\n                <blockquote className=\"blockquote my-2\">\r\n                    <p className=\"mb-0\">\"Hasta que no hayas amado a un animal, una parte de tu alma permanecer√° dormida\"</p>\r\n                    <footer className=\"blockquote-footer\">Anatole France</footer>\r\n                </blockquote>\r\n            </main>\r\n            <Publicidad orientation='x'></Publicidad>\r\n        </>\r\n    );\r\n}\r\n","D:\\Documentos\\AllinPets\\cliente\\src\\componentes\\ModalPublicar\\ModalPublicar.js",[],["130","131"],"D:\\Documentos\\AllinPets\\cliente\\src\\hooks\\useGetPubli.js",["132"],"import { useContext, useState } from 'react'\r\nimport { doDelPub, getAPIOnePubli, getAPIPubli, doUpdatePub, doAPIPublicacion } from '../services/Funciones';\r\nimport { UserContext } from '../context/UserContext';\r\n\r\nexport default function useGetPubli() {\r\n    const [loading, setLoading] = useState(true);\r\n    const [error, setError] = useState(false);\r\n    const [hasMore, setHasMore] = useState(true);\r\n    const { jwt } = useContext(UserContext)\r\n    const fechMoreData = async (pge) => {\r\n\r\n        try {\r\n            setLoading(true)\r\n            const res = getAPIPubli(jwt, pge)\r\n            setHasMore((await res).data.cantidad != 0)\r\n            setError(false)\r\n            setLoading(false)\r\n            return Object.values((await res).data.publicaciones)\r\n        } catch (error) {\r\n            console.log(error)\r\n            setError(true)\r\n        }\r\n    }\r\n\r\n    const getOnePublicacion = async (idPub) => {\r\n        try {\r\n            console.log(jwt)\r\n            const res = await getAPIOnePubli(idPub, jwt)\r\n\r\n            console.log(res.status)\r\n            return res.data\r\n        } catch (e) {\r\n            if (e.message.status === 403) {\r\n                throw new Error(e.message.data.message)\r\n            }\r\n        }\r\n    }\r\n\r\n    const updatePub = async (idPublicaciones, descripcion) => {\r\n        try {\r\n            const res = await doUpdatePub({\r\n                idPublicaciones,\r\n                descripcion\r\n            }, jwt)\r\n            return res\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n\r\n    const delPub = async (idPub) => {\r\n        try {\r\n            const res = await doDelPub(idPub, jwt)\r\n            console.log(res)\r\n            return res\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n\r\n    const doPublicar = async (descripcion) => {\r\n        try {\r\n            const res = await doAPIPublicacion(jwt, descripcion)\r\n            console.log(res)\r\n            return res\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n\r\n    return {\r\n        fechMoreData,\r\n        loading,\r\n        error,\r\n        hasMore,\r\n        getOnePublicacion,\r\n        doPublicar,\r\n        updatePub,\r\n        delPub\r\n    }\r\n}\r\n",["133","134"],"D:\\Documentos\\AllinPets\\cliente\\src\\services\\Funciones.js",["135","136","137","138","139","140","141","142","143","144","145","146","147","148","149","150","151","152","153","154"],"import axios from 'axios'\r\nconst baseUrl = 'http://localhost:4000'\r\n\r\nexport const doRegister = async newUser => {\r\n    try {\r\n        const resp = await axios({\r\n            url: `${baseUrl}/signup`,\r\n            method: 'post',\r\n            data: newUser\r\n        });\r\n        return resp\r\n    } catch (err) {\r\n        console.log(err.response)\r\n        throw { name: 'Error', message: err.response.data.message };\r\n    }\r\n}\r\n\r\n//funcion para hacer login\r\nexport const doLogin = async user => {\r\n    try {\r\n        const resp = await axios({\r\n            url: `${baseUrl}/signin`,\r\n            method: 'post',\r\n            data: user\r\n        });\r\n        console.log(resp)\r\n        return resp;\r\n    } catch (err) {\r\n        console.log(err.message)\r\n        throw { name: 'Error', message: err.response };\r\n    }\r\n}\r\n\r\n//funcion para hacer login con facebook\r\nexport const doLoginFacebook = async user => {\r\n    try {\r\n        const resp = await axios({\r\n            url: `${baseUrl}/signFacebook`,\r\n            method: 'post',\r\n            data: user\r\n        });\r\n        return resp;\r\n    } catch (err) {\r\n        console.log(err.message)\r\n        throw { name: 'Error', message: err.response };\r\n    }\r\n}\r\n\r\n//Modificar datos de usuario\r\nexport const doUpdateUser = async (modifyUser, token) => {\r\n    try {\r\n        console.log(modifyUser)\r\n        const resp = await axios({\r\n            url: `${baseUrl}/perfil/user`,\r\n            method: 'put',\r\n            data: {\r\n                'userModify': modifyUser\r\n            },\r\n            headers: {\r\n                'Authorization': token\r\n            }\r\n        })\r\n    } catch (err) {\r\n        console.log(err.response)\r\n        throw { name: 'Error', message: err.response };\r\n    }\r\n}\r\n\r\n//metodo para obetener las publicaciones, el feed principal\r\nexport const getAPIPubli = async (token, pge = 1) => {\r\n    try {\r\n        const resp = await axios({\r\n            url: `${baseUrl}/perfil/feed`,\r\n            method: 'get',\r\n            headers: {\r\n                'Authorization': token\r\n            },\r\n            params: {\r\n                pge\r\n            }\r\n        });\r\n        return resp;\r\n    } catch (err) {\r\n        console.log(err.response)\r\n        throw { name: 'Error', message: err.response };\r\n    }\r\n}\r\n\r\n//metodo para consultar por todas mis publicaciones\r\nexport const getAPImyPubli = async (token, pge = 1) => {\r\n    try {\r\n        const resp = await axios({\r\n            url: `${baseUrl}/perfil/myfeed`,\r\n            method: 'get',\r\n            headers: {\r\n                'Authorization': token\r\n            },\r\n            params: {\r\n                pge\r\n            }\r\n        });\r\n        return resp;\r\n    } catch (err) {\r\n        console.log(err.response)\r\n        throw { name: 'Error', message: err.response };\r\n    }\r\n}\r\n\r\n//metodo para consultar solo por una publicacion en especifico\r\nexport const getAPIOnePubli = async (idPub, token) => {\r\n    try {\r\n        const resp = await axios({\r\n            url: `${baseUrl}/perfil/publicacion`,\r\n            method: 'get',\r\n            headers: {\r\n                'Authorization': token\r\n            },\r\n            params: {\r\n                idPub\r\n            }\r\n        });\r\n        return resp;\r\n    } catch (err) {\r\n        console.log(err.response)\r\n        throw { name: 'Error', message: err.response };\r\n    }\r\n}\r\n\r\n//update publicacion\r\nexport const doUpdatePub = async (pubMod, token) => {\r\n    try {\r\n        console.log(pubMod)\r\n        const resp = await axios({\r\n            url: `${baseUrl}/perfil/publicacion`,\r\n            method: 'put',\r\n            headers: {\r\n                'Authorization': token\r\n            },\r\n            data: {\r\n                'pubUpdate': pubMod\r\n            }\r\n        });\r\n        console.log(resp)\r\n        return resp.status;\r\n    } catch (err) {\r\n        console.log(err.response)\r\n        throw { name: 'Error', message: err.response };\r\n    }\r\n}\r\n\r\n//elimiar publicacion\r\nexport const doDelPub = async (idPub, token) => {\r\n    try {\r\n        if (token) {\r\n            const resp = await axios({\r\n                url: `${baseUrl}/perfil/publicacion`,\r\n                method: 'delete',\r\n                headers: {\r\n                    'Authorization': token\r\n                },\r\n                params: {\r\n                    idPub\r\n                }\r\n            });\r\n            return resp.status;\r\n        }\r\n    } catch (err) {\r\n        console.log(err.response)\r\n        throw { name: 'Error', message: err.response };\r\n    }\r\n}\r\n\r\n//obtener informacion del usuario\r\nexport const getMyUser = async (token) => {\r\n    try {\r\n        if (token) {\r\n            const resp = await axios({\r\n                url: `${baseUrl}/perfil/user`,\r\n                method: 'get',\r\n                headers: {\r\n                    'Authorization': token\r\n                }\r\n            });\r\n            return resp;\r\n        }\r\n    } catch (err) {\r\n        console.log(err.response)\r\n        throw { name: 'Error', message: err.response };\r\n    }\r\n}\r\n\r\nexport const getDataUser = async (token, iduser) => {\r\n    try {\r\n        if (token) {\r\n            const resp = await axios({\r\n                url: `${baseUrl}/perfil/user`,\r\n                method: 'get',\r\n                headers: {\r\n                    'Authorization': token\r\n                },\r\n                params: {\r\n                    iduser\r\n                }\r\n            });\r\n            return resp;\r\n        }\r\n    } catch (err) {\r\n        console.log(err.response)\r\n        throw { name: 'Error', message: err.response };\r\n    }\r\n}\r\n\r\n//obtener los comentarios\r\nexport const getAPIComentarios = async (token, idPub) => {\r\n    try {\r\n        if (token) {\r\n            const resp = await axios({\r\n                url: `${baseUrl}/perfil/comentario`,\r\n                method: 'get',\r\n                headers: {\r\n                    'Authorization': token\r\n                },\r\n                params: {\r\n                    idPub\r\n                }\r\n            });\r\n            return resp;\r\n        }\r\n    } catch (err) {\r\n        console.log(err.response)\r\n        throw { name: 'Error', message: err.response };\r\n    }\r\n}\r\n\r\n//Comentar una publicacion\r\nexport const doComentario = async (token, comentario, idPub) => {\r\n    try {\r\n        const resp = await axios({\r\n            url: `${baseUrl}/perfil/comentario`,\r\n            method: 'post',\r\n            data: {\r\n                'comentario': comentario,\r\n                'idPub': idPub\r\n            },\r\n            headers: {\r\n                'Authorization': token\r\n            }\r\n        })\r\n        return resp.status\r\n    } catch (err) {\r\n        throw { name: 'Error', message: err.response };\r\n    }\r\n}\r\n\r\n//Crear publicacion\r\nexport const doAPIPublicacion = async (token, descripcion) => {\r\n    try {\r\n        const resp = await axios({\r\n            url: `${baseUrl}/perfil/publicacion`,\r\n            method: 'post',\r\n            data: {\r\n                descripcion\r\n            },\r\n            headers: {\r\n                'Authorization': token\r\n            }\r\n        })\r\n        return resp\r\n    } catch (err) {\r\n        throw { name: 'Error', message: err.response };\r\n    }\r\n}\r\n\r\n//obtener denuncias, s√≥lo para administradores\r\nexport const getAPIdenuncia = async (token) => {\r\n    try {\r\n        if (token) {\r\n            const resp = await axios({\r\n                url: `${baseUrl}/perfil/denuncia`,\r\n                method: 'get',\r\n                headers: {\r\n                    'Authorization': token\r\n                }\r\n            });\r\n            console.log(resp)\r\n            return resp;\r\n        }\r\n    } catch (err) {\r\n        console.log(err.response)\r\n        throw { name: 'Error', message: err.response };\r\n    }\r\n}\r\n\r\n//denunciar una publicacion\r\nexport const denunciar = async (idPub, denuncia, token) => {\r\n    try {\r\n        const resp = await axios({\r\n            url: `${baseUrl}/perfil/denuncia`,\r\n            method: 'post',\r\n            headers: {\r\n                'Authorization': token\r\n            },\r\n            data: {\r\n                idPub,\r\n                denuncia\r\n            }\r\n        })\r\n        console.log(resp)\r\n    } catch (err) {\r\n        console.log(err.response)\r\n        throw { name: 'Error', message: err.response }\r\n    }\r\n}\r\n\r\n//archivar la denuncia o banear al usuario culpable\r\nexport const doBan = async (iddenuncias, flag, token) => {\r\n    try {\r\n        console.log(iddenuncias, flag)\r\n        const resp = await axios({\r\n            url: `${baseUrl}/perfil/ban`,\r\n            method: 'put',\r\n            headers: {\r\n                'Authorization': token\r\n            },\r\n            data: {\r\n                iddenuncias,\r\n                flag\r\n            }\r\n        });\r\n        console.log(resp)\r\n        return resp.status;\r\n    } catch (err) {\r\n        console.log(err.response)\r\n        throw { name: 'Error', message: err.response }\r\n    }\r\n}\r\n\r\nexport const getAPIallChats = async (token) => {\r\n    try {\r\n        if (token) {\r\n            const resp = await axios({\r\n                url: `${baseUrl}/chat/all`,\r\n                method: 'get',\r\n                headers: {\r\n                    'Authorization': token\r\n                }\r\n            });\r\n            return resp;\r\n        }\r\n    } catch (err) {\r\n        console.log(err.response)\r\n        throw { name: 'Error', message: err.response };\r\n    }\r\n}\r\n\r\nexport const getMensajesChat = async (token, idChat) => {\r\n    try {\r\n        if (token) {\r\n            const resp = await axios({\r\n                url: `${baseUrl}/chat/mensaje`,\r\n                method: 'get',\r\n                headers: {\r\n                    'Authorization': token\r\n                },\r\n                params: {\r\n                    idChat\r\n                }\r\n            });\r\n            console.log(resp.data)\r\n            return resp.data;\r\n        }\r\n    } catch (err) {\r\n        console.log(err.response)\r\n        throw { name: 'Error', message: err.response };\r\n    }\r\n}\r\n\r\n",["155","156"],"D:\\Documentos\\AllinPets\\cliente\\src\\serviceWorker.js",[],"D:\\Documentos\\AllinPets\\cliente\\src\\index.js",[],["157","158"],"D:\\Documentos\\AllinPets\\cliente\\src\\componentes\\Home\\Home.js",["159","160"],"import React, { useEffect, useState } from 'react';\r\nimport Principal from '../Principal/Principal'\r\nimport useUser from '../../hooks/useUser'\r\nimport { useHistory, Route, Link } from 'react-router-dom'\r\n\r\nimport Noticias from '../Noticias/Noticias'\r\nimport Publicaciones from '../Publicaciones/Publicaciones'\r\nimport Adopciones from '../Adopciones/Adopciones'\r\nimport Configuracion from '../Configuracion/Configuracion'\r\nimport ModalPublicar from './../ModalPublicar/ModalPublicar';\r\nimport Publicacion from './../Publicacion/Publicacion';\r\nimport { Denuncias } from './../Denuncias/Denuncias'\r\nimport { Mensajes } from './../Mensajes/Mensajes'\r\nimport './custom.css';\r\n\r\n\r\nfunction Home(props) {\r\n\r\n    const { isLogged, dataUser, logout } = useUser()\r\n    let history = useHistory()\r\n    const [userType, setUserType] = useState()\r\n    useEffect(() => {\r\n        if (!isLogged) history.push('/')\r\n        dataUser.then(res => {\r\n            setUserType(res.tipo)\r\n        }).catch(e => {\r\n            console.log(e)\r\n        })\r\n    }, [isLogged]);\r\n\r\n    return (\r\n        <>\r\n            <div className=\"sidenav\">\r\n                <Link to='/home/noticias' style={{ top: '15%' }}>Noticias</Link>\r\n                <Link to='/home/publicaciones' style={{ top: '20%' }}>Mis Publicaciones</Link>\r\n                <Link to='/home/adopciones' style={{ top: '25%' }}>Adopciones</Link>\r\n                <Link to='/home/mensajes' style={{ top: '30%' }}>Mensajes</Link>\r\n                {userType === 2 && <Link to='/home/denuncias' style={{ top: '35%' }}>Denuncias</Link>}\r\n                {isLogged && <ModalPublicar></ModalPublicar>}\r\n            </div>\r\n\r\n            <div className=\"main\">\r\n                <Route path=\"/home/noticias\" component={Noticias} />\r\n                <Route path=\"/home/publicaciones\" component={Publicaciones} />\r\n                <Route path=\"/home/publicacion/:idpublicacion\" component={Publicacion} />\r\n                <Route path=\"/home/configuracion\" component={Configuracion} />\r\n                <Route path=\"/home/adopciones\" component={Adopciones} />\r\n                <Route path=\"/home/mensajes\" component={Mensajes} />\r\n                <Route path=\"/home/denuncias\" component={Denuncias} />\r\n                <Route path='/home/' component={Principal} exact></Route>\r\n            </div>\r\n\r\n        </>\r\n    );\r\n}\r\nexport default Home","D:\\Documentos\\AllinPets\\cliente\\src\\context\\UserContext.js",[],["161","162"],"D:\\Documentos\\AllinPets\\cliente\\src\\componentes\\Chat\\Chat.js",["163","164"],"import React, { useEffect, useState, useContext } from 'react'\r\nimport { Card, Button, InputGroup, FormControl } from 'react-bootstrap'\r\nimport * as Icon from 'react-bootstrap-icons';\r\nimport io from 'socket.io-client'\r\n//import socket from '../../services/Socket'\r\nimport { UserContext } from '../../context/UserContext'\r\nimport useChat from '../../hooks/UseChat';\r\n\r\nexport const Chat = (props) => {\r\n\r\n    const { idUserGlobal } = useContext(UserContext);\r\n    const { idChat } = props\r\n    const [newMensaje, setNewMensaje] = useState('');\r\n    const [mensajesChat, setMensajesChat] = useState([])\r\n    const [socket, setSocket] = useState();\r\n    const { getMensajesOfChat } = useChat()\r\n\r\n    const sendText = () => {\r\n        const data = {\r\n            idUsuarios: idUserGlobal,\r\n            idChat,\r\n            descripcion: newMensaje\r\n        }\r\n        socket.emit('mensajeToServer', data)\r\n        setNewMensaje('')\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (idChat !== 0) {\r\n            setSocket(io(\"http://localhost:5000/\", { query: `idChat=${idChat}&idUser=${idUserGlobal}` }))\r\n            if (socket) {\r\n                socket.emit('conectado', 'holaaaa')\r\n            }\r\n            getMensajesOfChat(idChat).then(res => {\r\n                if (res) {\r\n                    setMensajesChat(res)\r\n                } else {\r\n                    setMensajesChat([])\r\n                }\r\n                console.log(mensajesChat)\r\n            })\r\n        }\r\n        return () => {\r\n            if (socket) { socket.off() }\r\n        }\r\n    }, [idChat])\r\n\r\n    useEffect(() => {\r\n        if (socket) {\r\n            socket.on('mensajeToClient', data => {\r\n                console.log(data)\r\n                setMensajesChat([...mensajesChat, data])\r\n            })\r\n        }\r\n        return () => {\r\n            if (socket) { socket.off() }\r\n        }\r\n    }, [mensajesChat]);\r\n\r\n    if (idChat === 0) {\r\n        return (\r\n            <div>\r\n                No ha seleccionado chat\r\n            </div>\r\n        )\r\n    } else {\r\n        return (\r\n            <div>\r\n                <Card className='my-1' style={{ height: '500px' }}>\r\n                    <Card.Header>\r\n                        {idChat}\r\n                    </Card.Header>\r\n                    <Card.Body>\r\n                        {\r\n                            mensajesChat.map(val => (\r\n                                <div key={val.idmensajes}>\r\n                                    {val.descripcion}\r\n                                </div>\r\n                            ))\r\n                        }\r\n                    </Card.Body>\r\n                    <Card.Footer>\r\n                        <InputGroup className=\"mb-3\">\r\n                            <FormControl\r\n                                placeholder=\"Escribe un mensaje...\"\r\n                                maxLength='20'\r\n                                onChange={e => setNewMensaje(e.target.value)} value={newMensaje}\r\n                                onKeyPress={e => { if (e.key === 'Enter' && e.target.value.length <= 20) sendText() }}\r\n                            />\r\n                            <InputGroup.Append>\r\n                                <Button type='submit' variant=\"outline-primary\"\r\n                                    onClick={sendText}\r\n                                    disabled={!Boolean(newMensaje.trim().length > 0 && newMensaje.trim().length < 20)}\r\n                                >\r\n                                    <Icon.ArrowRightCircle /> Enviar</Button>\r\n                            </InputGroup.Append>\r\n                        </InputGroup>\r\n                    </Card.Footer>\r\n                </Card>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","D:\\Documentos\\AllinPets\\cliente\\src\\componentes\\Navigation\\Navigation.js",["165","166"],"import React from 'react'\r\nimport { Navbar, Container, Button } from 'react-bootstrap'\r\nimport * as Icon from 'react-bootstrap-icons';\r\nimport ModalSignIn from '../ModalSignIn/ModalSignIn'\r\nimport Image from 'react-bootstrap/Image'\r\nimport './styles.css'\r\nimport useUser from './../../hooks/useUser';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Drop = () => {\r\n    return (\r\n        <>\r\n            <Navbar.Toggle></Navbar.Toggle>\r\n            <Navbar.Collapse className='justify-content-end'>\r\n                <Link to='/home/configuracion' className='btn btn-outline-dark float-right'>\r\n                    <Icon.Gear size=\"18\"></Icon.Gear>\r\n                    <small className='font-weight-bold'> Mi Cuenta</small>\r\n                </Link>\r\n            </Navbar.Collapse>\r\n        </>\r\n    );\r\n}\r\n\r\nconst Navigation = () => {\r\n    const { isLogged } = useUser()\r\n\r\n    return (\r\n        <div>\r\n            <Navbar id='navbar' expand='lg' variant='light' style={{ backgroundColor: '#80ffff' }} className='navbar-fixed-top'>\r\n                <Container>\r\n                    <Navbar.Brand href='/'><Image src=\"/images/logoinicio.png\" fluid style={{ width: '150px' }, { height: '60px' }} /></Navbar.Brand>\r\n                    {\r\n                        isLogged\r\n                            ? <Drop></Drop>\r\n                            : <ModalSignIn></ModalSignIn>\r\n                    }\r\n                </Container>\r\n            </Navbar>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Navigation",["167","168"],"D:\\Documentos\\AllinPets\\cliente\\src\\componentes\\Registro\\Registro.js",["169","170","171","172"],"D:\\Documentos\\AllinPets\\cliente\\src\\services\\Socket.js",[],"D:\\Documentos\\AllinPets\\cliente\\src\\hooks\\useUser.js",["173","174","175"],"D:\\Documentos\\AllinPets\\cliente\\src\\componentes\\Mensajes\\Mensajes.js",["176","177"],"import React, { useState, useEffect } from 'react'\r\nimport { Container, Row, Col, Card, Button } from 'react-bootstrap'\r\nimport useChat from './../../hooks/UseChat';\r\nimport { Chat } from '../Chat/Chat'\r\nimport useUser from '../../hooks/useUser';\r\n\r\nexport const Mensajes = () => {\r\n    const [chatList, setChatList] = useState([]);\r\n    const [paintChat, setPaintChat] = useState(0);\r\n    const { getAllChats } = useChat()\r\n\r\n    useEffect(() => {\r\n        const loadData = async () => {\r\n            const result = await getAllChats()\r\n            if (result) { setChatList(result) }\r\n        }\r\n        loadData()\r\n    }, [])\r\n\r\n    return (\r\n        <div>\r\n            <Container className='border border-primary my-1'>\r\n                <Row style={{ height: '550px' }}>\r\n                    <Col lg={4}>\r\n                        <Card className='my-1' style={{ height: '500px' }}>\r\n                            <Card.Header>\r\n                                Destinatarios\r\n                            </Card.Header>\r\n                            <Card.Body>\r\n                                {\r\n                                    chatList.map((val, i) => (\r\n                                        <Button key={i} variant='outline-info' className='d-block w-100 my-1' onClick={\r\n                                            e => (setPaintChat(val.idchat))\r\n                                        }>\r\n                                            {val.nombre}\r\n                                        </Button>\r\n                                    ))\r\n                                }\r\n                            </Card.Body>\r\n                        </Card>\r\n                    </Col>\r\n                    <Col lg={8}>\r\n                        <Chat idChat={paintChat}></Chat>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        </div>\r\n    )\r\n}\r\n","D:\\Documentos\\AllinPets\\cliente\\src\\componentes\\Adopciones\\Adopciones.js",[],["178","179"],"D:\\Documentos\\AllinPets\\cliente\\src\\hooks\\useGetMyPubli.js",["180","181","182"],"import { useEffect, useContext, useState, useCallback } from 'react'\r\nimport { getAPImyPubli } from '../services/Funciones';\r\nimport { UserContext } from '../context/UserContext';\r\n\r\nexport default function useGetMyPubli() {\r\n    const [loading, setLoading] = useState(true);\r\n    const [error, setError] = useState(false);\r\n    const [hasMore, setHasMore] = useState(true);\r\n    const { jwt } = useContext(UserContext)\r\n    const fechMoreData = async (pge) => {\r\n        try {\r\n            setLoading(true)\r\n            const res = getAPImyPubli(jwt, pge)\r\n            setHasMore((await res).data.cantidad != 0)\r\n            setError(false)\r\n            setLoading(false)\r\n            return Object.values((await res).data.publicaciones)\r\n        } catch (error) {\r\n            console.log(error)\r\n            setError(true)\r\n        }\r\n    }\r\n    return {\r\n        fechMoreData,\r\n        loading,\r\n        error,\r\n        hasMore\r\n    }\r\n}\r\n","D:\\Documentos\\AllinPets\\cliente\\src\\componentes\\Recursos\\FormatPub.js",[],"D:\\Documentos\\AllinPets\\cliente\\src\\hooks\\useDenuncias.js",["183"],"D:\\Documentos\\AllinPets\\cliente\\src\\hooks\\UseChat.js",["184","185","186","187"],"import { getAPIallChats, getMensajesChat } from './../services/Funciones';\r\nimport { useContext, useState } from 'react';\r\nimport { UserContext } from '../context/UserContext';\r\nimport useUser from './useUser';\r\n\r\nexport default function useChat() {\r\n\r\n    const { getInfoUser } = useUser()\r\n    const { jwt } = useContext(UserContext)\r\n    const [hasMore, setHasMore] = useState(true);\r\n    const [loading, setLoading] = useState(true);\r\n    const getAllChats = async () => {\r\n        try {\r\n            setLoading(true)\r\n            const res = getAPIallChats(jwt);\r\n            const valores = Object.values((await res).data)\r\n            console.log(valores)\r\n            return valores\r\n        } catch (error) {\r\n            console.log(error)\r\n            return null\r\n        }\r\n    }\r\n\r\n    const getMensajesOfChat = async (idChat) => {\r\n        try {\r\n            const res = await getMensajesChat(jwt, idChat)\r\n            const resMensajes = Object.values(res.mensajesList)\r\n            console.log(resMensajes)\r\n            return resMensajes\r\n        } catch (error) {\r\n            console.log(error)\r\n            return null\r\n        }\r\n    }\r\n\r\n    return {\r\n        getAllChats,\r\n        getMensajesOfChat\r\n    }\r\n}","D:\\Documentos\\AllinPets\\cliente\\src\\componentes\\Recursos\\Publicidad.js",["188"],"import React from 'react'\r\nimport { Col, Row } from 'react-bootstrap';\r\nimport Image from 'react-bootstrap/Image'\r\n\r\nexport default function Publicidad(props) {\r\n    const orientation = props.orientation;\r\n    return (\r\n        <div className='container-fluid my-2'>\r\n            <Row className='align-items-center'>\r\n                <Col>\r\n                    <Image src='./images/arca.png' fluid />\r\n                </Col>\r\n                <Col>\r\n                    <Image src=\"./images/masterdog.png\" fluid className='mx-auto d-block' />\r\n                </Col>\r\n                <Col>\r\n                    <Image src='./images/dr.jpg' fluid rounded />\r\n                </Col>\r\n            </Row>\r\n        </div>\r\n    )\r\n}\r\n","D:\\Documentos\\AllinPets\\cliente\\src\\componentes\\Alerts\\Alerts.js",[],"D:\\Documentos\\AllinPets\\cliente\\src\\componentes\\ModalSignIn\\ModalSignIn.js",["189","190","191","192","193","194"],"D:\\Documentos\\AllinPets\\cliente\\src\\componentes\\Noticias\\Noticias.js",["195","196","197"],"D:\\Documentos\\AllinPets\\cliente\\src\\hooks\\useComentarios.js",[],"D:\\Documentos\\AllinPets\\cliente\\src\\componentes\\Configuracion\\Configuracion.js",["198"],"import React, { useState, useEffect } from 'react';\r\nimport useUser from './../../hooks/useUser';\r\nimport Loading from './../Recursos/Loading';\r\nimport { Card, Form, Button, Accordion } from 'react-bootstrap'\r\nimport { useHistory } from 'react-router-dom';\r\nimport * as Icon from 'react-bootstrap-icons';\r\n\r\nfunction Configuracion(props) {\r\n\r\n    const { getMyDataUser, logout, updateUser } = useUser()\r\n    let history = useHistory()\r\n    const [usuario, setUsuario] = useState({});\r\n    const [nombre, setNombre] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [descripcion, setDescripcion] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [disableForm, setDisableForm] = useState(true);\r\n    const [rePassword, setRePassword] = useState('');\r\n    const [error, setError] = useState(false);\r\n    const [exito, setExito] = useState(false);\r\n\r\n    const handleLogout = () => {\r\n        logout();\r\n        history.push('/')\r\n    }\r\n\r\n    const handleModificar = () => {\r\n        if (password !== rePassword) {\r\n            setError(true)\r\n            return\r\n        } else {\r\n            setError(false)\r\n        }\r\n        const userModify = {\r\n            nombre,\r\n            password,\r\n            email,\r\n            descripcion\r\n        }\r\n        for (let propiedad in userModify) {\r\n            if (userModify[propiedad] === null || userModify[propiedad] === undefined) {\r\n                delete userModify[propiedad]\r\n            }\r\n        }\r\n\r\n        updateUser(userModify).then(() => {\r\n            setExito(true)\r\n        }).catch(() => {\r\n            setExito(false)\r\n        })\r\n    }\r\n\r\n    useEffect(() => {\r\n        getMyDataUser().then(res => {\r\n            console.log(res)\r\n            setUsuario(res)\r\n            setNombre(res.nombre)\r\n            setDescripcion(res.descripcion)\r\n            setEmail(res.emai)\r\n        }).catch(e => {\r\n            history.push('/')\r\n        })\r\n    }, []);\r\n\r\n    if (!Object.keys(usuario).length) return (<Loading />);\r\n\r\n    return (\r\n        <div>\r\n            <Card border=\"primary\" style={{ width: '40rem' }}>\r\n                <Card.Header>Informaci√≥n del Usuario</Card.Header>\r\n                <Card.Body>\r\n                    <Card.Title>Rut {usuario.rut}</Card.Title>\r\n                    {exito && <p className='border border-success'>Modificacion exitosa</p>}\r\n                    <Form>\r\n                        <Form.Group>\r\n                            <Form.Label>Nombre</Form.Label>\r\n                            <Form.Control type=\"text\" placeholder=\"Ingrese Nuevo Nombre\" onChange={e => setNombre(e.target.value)} value={nombre} disabled={disableForm} />\r\n                        </Form.Group>\r\n\r\n                        <Form.Group>\r\n                            <Form.Label>Descripci√≥n</Form.Label>\r\n                            <Form.Control type=\"text\" placeholder=\"Ingrese Descripci√≥n\" onChange={e => setDescripcion(e.target.value)} value={descripcion} disabled={disableForm} />\r\n                        </Form.Group>\r\n\r\n                        <Form.Group>\r\n                            <Form.Label>Email</Form.Label>\r\n                            <Form.Control type=\"text\" placeholder=\"Ingrese email\" onChange={e => setEmail(e.target.value)} value={email} disabled={disableForm} />\r\n                        </Form.Group>\r\n                        <Accordion>\r\n                            <Accordion.Toggle as={Button} variant=\"link\" eventKey=\"0\">\r\n                                <Icon.Key /> Cambiar Contrase√±a\r\n                            </Accordion.Toggle>\r\n                            <Accordion.Collapse eventKey=\"0\">\r\n                                <Form.Group>\r\n                                    {error && <p className='border border-danger'>Las contrase√±as deben ser iguales</p>}\r\n                                    <Form.Label>Nueva Contrase√±a</Form.Label>\r\n                                    <Form.Control type=\"password\" placeholder=\"Ingrese Nueva Contrase√±a\" onChange={e => setPassword(e.target.value)} value={password} disabled={disableForm} />\r\n                                    <Form.Control type=\"password\" placeholder=\"Repita Nueva Contrase√±a\" onChange={e => setRePassword(e.target.value)} value={rePassword} disabled={disableForm} />\r\n                                </Form.Group>\r\n                            </Accordion.Collapse>\r\n                        </Accordion>\r\n                    </Form>\r\n                </Card.Body>\r\n                <Card.Footer>\r\n                    <Button variant=\"success\" disabled={disableForm} onClick={handleModificar}><Icon.ArrowRightCircle></Icon.ArrowRightCircle> Modificar</Button>\r\n                    <Button variant=\"warning\" onClick={e => setDisableForm(!disableForm)}>\r\n                        {\r\n                            disableForm\r\n                                ? <Icon.Pencil />\r\n                                : <Icon.XCircle />\r\n                        }Editar Datos\r\n                    </Button>\r\n                </Card.Footer>\r\n            </Card>\r\n            <Button variant=\"danger\" onClick={handleLogout}><Icon.Power></Icon.Power> Cerrar Sesi√≥n</Button>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Configuracion;","D:\\Documentos\\AllinPets\\cliente\\src\\componentes\\Recursos\\Toasts.js",[],{"ruleId":"199","severity":1,"message":"200","line":6,"column":1,"nodeType":"201","endLine":27,"endColumn":2},{"ruleId":"202","severity":1,"message":"203","line":12,"column":8,"nodeType":"204","endLine":12,"endColumn":18,"suggestions":"205"},{"ruleId":"206","replacedBy":"207"},{"ruleId":"208","replacedBy":"209"},{"ruleId":"210","severity":1,"message":"211","line":15,"column":50,"nodeType":"212","messageId":"213","endLine":15,"endColumn":52},{"ruleId":"206","replacedBy":"214"},{"ruleId":"208","replacedBy":"215"},{"ruleId":"216","severity":1,"message":"217","line":14,"column":9,"nodeType":"218","messageId":"219","endLine":14,"endColumn":69},{"ruleId":"216","severity":1,"message":"217","line":30,"column":9,"nodeType":"218","messageId":"219","endLine":30,"endColumn":56},{"ruleId":"216","severity":1,"message":"217","line":45,"column":9,"nodeType":"218","messageId":"219","endLine":45,"endColumn":56},{"ruleId":"220","severity":1,"message":"221","line":53,"column":15,"nodeType":"222","messageId":"223","endLine":53,"endColumn":19},{"ruleId":"216","severity":1,"message":"217","line":65,"column":9,"nodeType":"218","messageId":"219","endLine":65,"endColumn":56},{"ruleId":"216","severity":1,"message":"217","line":85,"column":9,"nodeType":"218","messageId":"219","endLine":85,"endColumn":56},{"ruleId":"216","severity":1,"message":"217","line":105,"column":9,"nodeType":"218","messageId":"219","endLine":105,"endColumn":56},{"ruleId":"216","severity":1,"message":"217","line":125,"column":9,"nodeType":"218","messageId":"219","endLine":125,"endColumn":56},{"ruleId":"216","severity":1,"message":"217","line":147,"column":9,"nodeType":"218","messageId":"219","endLine":147,"endColumn":56},{"ruleId":"216","severity":1,"message":"217","line":169,"column":9,"nodeType":"218","messageId":"219","endLine":169,"endColumn":56},{"ruleId":"216","severity":1,"message":"217","line":188,"column":9,"nodeType":"218","messageId":"219","endLine":188,"endColumn":56},{"ruleId":"216","severity":1,"message":"217","line":209,"column":9,"nodeType":"218","messageId":"219","endLine":209,"endColumn":56},{"ruleId":"216","severity":1,"message":"217","line":231,"column":9,"nodeType":"218","messageId":"219","endLine":231,"endColumn":56},{"ruleId":"216","severity":1,"message":"217","line":251,"column":9,"nodeType":"218","messageId":"219","endLine":251,"endColumn":56},{"ruleId":"216","severity":1,"message":"217","line":270,"column":9,"nodeType":"218","messageId":"219","endLine":270,"endColumn":56},{"ruleId":"216","severity":1,"message":"217","line":290,"column":9,"nodeType":"218","messageId":"219","endLine":290,"endColumn":56},{"ruleId":"216","severity":1,"message":"217","line":311,"column":9,"nodeType":"218","messageId":"219","endLine":311,"endColumn":55},{"ruleId":"216","severity":1,"message":"217","line":334,"column":9,"nodeType":"218","messageId":"219","endLine":334,"endColumn":55},{"ruleId":"216","severity":1,"message":"217","line":352,"column":9,"nodeType":"218","messageId":"219","endLine":352,"endColumn":56},{"ruleId":"216","severity":1,"message":"217","line":374,"column":9,"nodeType":"218","messageId":"219","endLine":374,"endColumn":56},{"ruleId":"206","replacedBy":"224"},{"ruleId":"208","replacedBy":"225"},{"ruleId":"206","replacedBy":"226"},{"ruleId":"208","replacedBy":"227"},{"ruleId":"220","severity":1,"message":"228","line":19,"column":33,"nodeType":"222","messageId":"223","endLine":19,"endColumn":39},{"ruleId":"202","severity":1,"message":"229","line":29,"column":8,"nodeType":"204","endLine":29,"endColumn":18,"suggestions":"230"},{"ruleId":"206","replacedBy":"231"},{"ruleId":"208","replacedBy":"232"},{"ruleId":"202","severity":1,"message":"233","line":46,"column":8,"nodeType":"204","endLine":46,"endColumn":16,"suggestions":"234"},{"ruleId":"202","severity":1,"message":"235","line":58,"column":8,"nodeType":"204","endLine":58,"endColumn":22,"suggestions":"236"},{"ruleId":"220","severity":1,"message":"237","line":2,"column":29,"nodeType":"222","messageId":"223","endLine":2,"endColumn":35},{"ruleId":"238","severity":1,"message":"239","line":31,"column":111,"nodeType":"240","messageId":"241","endLine":31,"endColumn":112},{"ruleId":"206","replacedBy":"242"},{"ruleId":"208","replacedBy":"243"},{"ruleId":"199","severity":1,"message":"200","line":10,"column":1,"nodeType":"201","endLine":138,"endColumn":2},{"ruleId":"210","severity":1,"message":"244","line":55,"column":26,"nodeType":"212","messageId":"213","endLine":55,"endColumn":28},{"ruleId":"210","severity":1,"message":"244","line":56,"column":36,"nodeType":"212","messageId":"213","endLine":56,"endColumn":38},{"ruleId":"202","severity":1,"message":"203","line":76,"column":8,"nodeType":"204","endLine":76,"endColumn":18,"suggestions":"245"},{"ruleId":"220","severity":1,"message":"246","line":10,"column":22,"nodeType":"222","messageId":"223","endLine":10,"endColumn":33},{"ruleId":"202","severity":1,"message":"247","line":37,"column":8,"nodeType":"204","endLine":37,"endColumn":25,"suggestions":"248"},{"ruleId":"202","severity":1,"message":"247","line":43,"column":8,"nodeType":"204","endLine":43,"endColumn":21,"suggestions":"249"},{"ruleId":"220","severity":1,"message":"250","line":5,"column":8,"nodeType":"222","messageId":"223","endLine":5,"endColumn":15},{"ruleId":"202","severity":1,"message":"251","line":18,"column":8,"nodeType":"204","endLine":18,"endColumn":10,"suggestions":"252"},{"ruleId":"206","replacedBy":"253"},{"ruleId":"208","replacedBy":"254"},{"ruleId":"220","severity":1,"message":"255","line":1,"column":10,"nodeType":"222","messageId":"223","endLine":1,"endColumn":19},{"ruleId":"220","severity":1,"message":"256","line":1,"column":43,"nodeType":"222","messageId":"223","endLine":1,"endColumn":54},{"ruleId":"210","severity":1,"message":"211","line":14,"column":50,"nodeType":"212","messageId":"213","endLine":14,"endColumn":52},{"ruleId":"210","severity":1,"message":"211","line":14,"column":50,"nodeType":"212","messageId":"213","endLine":14,"endColumn":52},{"ruleId":"220","severity":1,"message":"257","line":8,"column":13,"nodeType":"222","messageId":"223","endLine":8,"endColumn":24},{"ruleId":"220","severity":1,"message":"258","line":10,"column":12,"nodeType":"222","messageId":"223","endLine":10,"endColumn":19},{"ruleId":"220","severity":1,"message":"259","line":10,"column":21,"nodeType":"222","messageId":"223","endLine":10,"endColumn":31},{"ruleId":"220","severity":1,"message":"260","line":11,"column":12,"nodeType":"222","messageId":"223","endLine":11,"endColumn":19},{"ruleId":"220","severity":1,"message":"261","line":6,"column":11,"nodeType":"222","messageId":"223","endLine":6,"endColumn":22},{"ruleId":"199","severity":1,"message":"200","line":13,"column":1,"nodeType":"201","endLine":147,"endColumn":2},{"ruleId":"220","severity":1,"message":"262","line":19,"column":12,"nodeType":"222","messageId":"223","endLine":19,"endColumn":21},{"ruleId":"220","severity":1,"message":"263","line":19,"column":23,"nodeType":"222","messageId":"223","endLine":19,"endColumn":35},{"ruleId":"220","severity":1,"message":"264","line":23,"column":15,"nodeType":"222","messageId":"223","endLine":23,"endColumn":18},{"ruleId":"210","severity":1,"message":"244","line":67,"column":26,"nodeType":"212","messageId":"213","endLine":67,"endColumn":28},{"ruleId":"210","severity":1,"message":"244","line":68,"column":36,"nodeType":"212","messageId":"213","endLine":68,"endColumn":38},{"ruleId":"220","severity":1,"message":"265","line":1,"column":17,"nodeType":"222","messageId":"223","endLine":1,"endColumn":27},{"ruleId":"199","severity":1,"message":"200","line":10,"column":1,"nodeType":"201","endLine":50,"endColumn":2},{"ruleId":"202","severity":1,"message":"266","line":25,"column":8,"nodeType":"204","endLine":25,"endColumn":13,"suggestions":"267"},{"ruleId":"202","severity":1,"message":"268","line":63,"column":8,"nodeType":"204","endLine":63,"endColumn":10,"suggestions":"269"},"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.","ArrayExpression",["270"],"no-native-reassign",["271"],"no-negated-in-lhs",["272"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected",["271"],["272"],"no-throw-literal","Expected an error object to be thrown.","ThrowStatement","object","no-unused-vars","'resp' is assigned a value but never used.","Identifier","unusedVar",["271"],["272"],["271"],["272"],"'logout' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'dataUser' and 'history'. Either include them or remove the dependency array.",["273"],["271"],["272"],"React Hook useEffect has missing dependencies: 'getMensajesOfChat', 'idUserGlobal', 'mensajesChat', and 'socket'. Either include them or remove the dependency array.",["274"],"React Hook useEffect has a missing dependency: 'socket'. Either include it or remove the dependency array.",["275"],"'Button' is defined but never used.","no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression",["271"],["272"],"Expected '===' and instead saw '=='.",["276"],"'setDataUser' is assigned a value but never used.","React Hook useCallback has missing dependencies: 'cookies' and 'setIdUserGlobal'. Either include them or remove the dependency array.",["277"],["278"],"'useUser' is defined but never used.","React Hook useEffect has a missing dependency: 'getAllChats'. Either include it or remove the dependency array.",["279"],["271"],["272"],"'useEffect' is defined but never used.","'useCallback' is defined but never used.","'getInfoUser' is assigned a value but never used.","'hasMore' is assigned a value but never used.","'setHasMore' is assigned a value but never used.","'loading' is assigned a value but never used.","'orientation' is assigned a value but never used.","'showAlert' is assigned a value but never used.","'setShowAlert' is assigned a value but never used.","'nav' is assigned a value but never used.","'useContext' is defined but never used.","React Hook useEffect has missing dependencies: 'fechMoreData', 'history', and 'isLogged'. Either include them or remove the dependency array.",["280"],"React Hook useEffect has missing dependencies: 'getMyDataUser' and 'history'. Either include them or remove the dependency array.",["281"],{"desc":"282","fix":"283"},"no-global-assign","no-unsafe-negation",{"desc":"284","fix":"285"},{"desc":"286","fix":"287"},{"desc":"288","fix":"289"},{"desc":"282","fix":"290"},{"desc":"291","fix":"292"},{"desc":"291","fix":"293"},{"desc":"294","fix":"295"},{"desc":"296","fix":"297"},{"desc":"298","fix":"299"},"Update the dependencies array to be: [history, isLogged]",{"range":"300","text":"301"},"Update the dependencies array to be: [dataUser, history, isLogged]",{"range":"302","text":"303"},"Update the dependencies array to be: [getMensajesOfChat, idChat, idUserGlobal, mensajesChat, socket]",{"range":"304","text":"305"},"Update the dependencies array to be: [mensajesChat, socket]",{"range":"306","text":"307"},{"range":"308","text":"301"},"Update the dependencies array to be: [cookies, setJWT, setIdUserGlobal]",{"range":"309","text":"310"},{"range":"311","text":"310"},"Update the dependencies array to be: [getAllChats]",{"range":"312","text":"313"},"Update the dependencies array to be: [fechMoreData, history, isLogged, pge]",{"range":"314","text":"315"},"Update the dependencies array to be: [getMyDataUser, history]",{"range":"316","text":"317"},[387,397],"[history, isLogged]",[1039,1049],"[dataUser, history, isLogged]",[1556,1564],"[getMensajesOfChat, idChat, idUserGlobal, mensajesChat, socket]",[1871,1885],"[mensajesChat, socket]",[2700,2710],[1425,1442],"[cookies, setJWT, setIdUserGlobal]",[1578,1591],[625,627],"[getAllChats]",[915,920],"[fechMoreData, history, isLogged, pge]",[1965,1967],"[getMyDataUser, history]"]